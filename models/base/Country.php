<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\helpers\ArrayHelper;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "country".
 *
 * @property integer $id
 * @property string $name
 * @property string $language
 * @property string $lang_code
 * @property string $country_code
 * @property string $mobile_code
 * @property string $flag
 * @property integer $status
 * @property string $created_at
 * @property string $updated_at
 *
 * @property \app\models\Customer[] $customers
 * @property \app\models\States[] $states
 */
abstract class Country extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'country';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['timestamp'] = [
            'class' => TimestampBehavior::class,
                        ];
        
    return $behaviors;
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        $parentRules = parent::rules();
        return ArrayHelper::merge($parentRules, [
            [['status'], 'default', 'value' => 1],
            [['name', 'language', 'lang_code', 'country_code', 'mobile_code', 'flag'], 'required'],
            [['status'], 'integer'],
            [['name'], 'string', 'max' => 100],
            [['language'], 'string', 'max' => 50],
            [['lang_code'], 'string', 'max' => 5],
            [['country_code'], 'string', 'max' => 3],
            [['mobile_code', 'flag'], 'string', 'max' => 10]
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return ArrayHelper::merge(parent::attributeLabels(), [
            'id' => 'ID',
            'name' => 'Name',
            'language' => 'Language',
            'lang_code' => 'Lang Code',
            'country_code' => 'Country Code',
            'mobile_code' => 'Mobile Code',
            'flag' => 'Flag',
            'status' => 'Status',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return ArrayHelper::merge(parent::attributeHints(), [
            'name' => 'Country name',
            'language' => 'Primary language',
            'lang_code' => 'Language code (e.g., en, es, fr)',
            'country_code' => 'Country code (e.g., USA, CAN, GBR)',
            'mobile_code' => 'Mobile country code (e.g., +1, +44, +91)',
            'flag' => 'Flag emoji or code',
            'status' => 'Status: 1=Active, 0=Inactive',
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCustomers()
    {
        return $this->hasMany(\app\models\Customer::class, ['country_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getStates()
    {
        return $this->hasMany(\app\models\States::class, ['country_id' => 'id']);
    }

}
