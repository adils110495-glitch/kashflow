<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\controllers\base;

use app\models\LevelPlan;
use yii\base\InvalidConfigException;
use yii\data\ActiveDataProvider;
use yii\helpers\Url;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\web\Request;
use yii\web\Response;
use Yii;

/**
 * LevelPlanController implements the CRUD actions for LevelPlan model.
 *
 * @property-read Request $request
 */
class LevelPlanController extends Controller
{

    /**
     * Lists all LevelPlan models.
     *
     * @throws InvalidConfigException
     * @return string
     */
    public function actionIndex()
    {
        $dataProvider = new ActiveDataProvider([
            'query' => LevelPlan::find()->orderBy('level ASC'),
            'pagination' => [
                'pageSize' => 20,
            ],
        ]);
    
        return $this->render('index', [
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single LevelPlan model.
     *
     * @param integer $id
     *
     * @throws NotFoundHttpException
     * @return string
     */
    public function actionView($id)
    {
        return $this->render('view', ['model' => $this->findModel($id)]);
    }

    /**
     * Creates a new LevelPlan model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     *
     * @throws yii\base\InvalidConfigException
     * @return string|Response
     */
    public function actionCreate()
    {
        $model = Yii::createObject(LevelPlan::class);
        
        // Set default next level
        $model->level = LevelPlan::getNextLevel();
        
        try {
            if ($model->load($this->request->post()) && $model->save()) {
                Yii::$app->session->setFlash('success', 'Level plan created successfully.');
                return $this->redirect(['view', 'id' => $model->id]);
            }
            if (!Yii::$app->request->isPost) {
                $model->load($this->request->get());
            }
        } catch (\Exception $e) {
            $model->addError('_exception', $e->errorInfo[2] ?? $e->getMessage());
        }
        return $this->render('create', ['model' => $model]);
    }

    /**
     * Updates an existing LevelPlan model.
     * If update is successful, the browser will be redirected to the 'view' page.
     *
     * @param integer $id
     *
     * @throws NotFoundHttpException
     * @return string|Response
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);
        
        try {
            if ($model->load($this->request->post()) && $model->save()) {
                Yii::$app->session->setFlash('success', 'Level plan updated successfully.');
                return $this->redirect(['view', 'id' => $model->id]);
            }
        } catch (\Exception $e) {
            $model->addError('_exception', $e->errorInfo[2] ?? $e->getMessage());
        }
        
        return $this->render('update', ['model' => $model]);
    }

    /**
     * Deletes an existing LevelPlan model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     *
     * @param integer $id
     *
     * @throws \Throwable
     * @return Response
     */
    public function actionDelete($id)
    {
        try {
            $model = $this->findModel($id);
            $level = $model->level;
            $model->delete();
            Yii::$app->session->setFlash('success', "Level {$level} plan deleted successfully.");
        } catch (\Exception $e) {
            Yii::$app->session->setFlash('error', $e->errorInfo[2] ?? $e->getMessage());
        }

        return $this->redirect(['index']);
    }

    /**
     * Finds the LevelPlan model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     *
     * @param integer $id
     *
     * @throws NotFoundHttpException if the model cannot be found
     * @return LevelPlan the loaded model
     */
    protected function findModel($id)
    {
        $model = LevelPlan::findOne($id);
        if ($model !== null) {
            return $model;
        }
        throw new NotFoundHttpException('The requested page does not exist.');
    }
}